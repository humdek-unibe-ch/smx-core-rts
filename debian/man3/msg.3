.TH "msg" 3 "Wed Feb 12 2020" "Version v0.4.0" "smxrts" \" -*- nroff -*-
.ad l
.nh
.SH NAME
msg
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSMX_MSG_COPY\fP(h,  msg)   \fBsmx_msg_copy\fP( h, msg )"
.br
.ti -1c
.RI "#define \fBSMX_MSG_CREATE\fP(h,  data,  dsize,  fcopy,  ffree,  funpack)   \fBsmx_msg_create\fP( h, data, dsize, fcopy, ffree, funpack )"
.br
.ti -1c
.RI "#define \fBSMX_MSG_DESTROY\fP(h,  msg)   \fBsmx_msg_destroy\fP( h, msg, 1 )"
.br
.ti -1c
.RI "#define \fBSMX_MSG_FILTER\fP(msg,  count, \&.\&.\&.)   \fBsmx_msg_filter\fP( msg, count, ##__VA_ARGS__ )"
.br
.ti -1c
.RI "#define \fBSMX_MSG_UNPACK\fP(msg)   \fBsmx_msg_unpack\fP( msg )"
.br
.ti -1c
.RI "#define \fBSMX_MSG_SET_TYPE\fP(msg,  type)   \fBsmx_msg_set_type\fP( msg, type )"
.br
.ti -1c
.RI "#define \fBSMX_MSG_PREVENT_BACKUP\fP(msg)   \fBsmx_msg_prevent_backup\fP( msg )"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBsmx_msg_s\fP \fBsmx_msg_t\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBLicense:\fP
.RS 4
This Source Code Form is subject to the terms of the Mozilla Public License, v\&. 2\&.0\&. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/\&.
.RE
.PP
Message definitions for the runtime system library of Streamix 
.SH "Macro Definition Documentation"
.PP 
.SS "#define SMX_MSG_COPY(h, msg)   \fBsmx_msg_copy\fP( h, msg )"
Make a deep copy of a message\&. For details refer to \fBsmx_msg_copy()\fP\&. 
.SS "#define SMX_MSG_CREATE(h, data, dsize, fcopy, ffree, funpack)   \fBsmx_msg_create\fP( h, data, dsize, fcopy, ffree, funpack )"
Create a message structure\&. For details refer to \fBsmx_msg_create()\fP\&. 
.SS "#define SMX_MSG_DESTROY(h, msg)   \fBsmx_msg_destroy\fP( h, msg, 1 )"
Destroy a message structure\&. For details refer to \fBsmx_msg_destroy()\fP\&. 
.SS "#define SMX_MSG_FILTER(msg, count,  \&.\&.\&.)   \fBsmx_msg_filter\fP( msg, count, ##__VA_ARGS__ )"
Checks wether any of the provided filter match with the message type\&. For more details refer to smx_msg_filer()\&. 
.SS "#define SMX_MSG_PREVENT_BACKUP(msg)   \fBsmx_msg_prevent_backup\fP( msg )"
Prevent a message from creating backups in decoupled channels\&. 
.SS "#define SMX_MSG_SET_TYPE(msg, type)   \fBsmx_msg_set_type\fP( msg, type )"
Set the type of the message payload\&. The type can be an arbitrary string\&. For details refer to \fBsmx_msg_set_type()\fP\&. 
.SS "#define SMX_MSG_UNPACK(msg)   \fBsmx_msg_unpack\fP( msg )"
Unpack the message payload\&. For details refer to \fBsmx_msg_unpack()\fP\&. 
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBsmx_msg_s\fP \fBsmx_msg_t\fP"
The streamix message type\&. Refer to the structure definition for more information \fBsmx_msg_s\fP\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for smxrts from the source code\&.
